// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blogMakale.Models;

namespace blogMakale.Migrations
{
    [DbContext(typeof(BlogMakaleContext))]
    partial class BlogMakaleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("blogMakale.Models.EtiketModel", b =>
                {
                    b.Property<int>("id_Etiket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EtiketAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_Etiket");

                    b.ToTable("Etiket");
                });

            modelBuilder.Entity("blogMakale.Models.FavoriModel", b =>
                {
                    b.Property<int>("id_Makale")
                        .HasColumnType("int");

                    b.Property<int>("id_Kullanici")
                        .HasColumnType("int");

                    b.Property<DateTime>("FavoriTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("id_Makale", "id_Kullanici");

                    b.HasIndex("id_Kullanici");

                    b.ToTable("Favori");
                });

            modelBuilder.Entity("blogMakale.Models.KategoriModel", b =>
                {
                    b.Property<int>("id_Kategori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_Kategori");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("blogMakale.Models.KullaniciModel", b =>
                {
                    b.Property<int>("id_Kullanici")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_Kullanici");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("blogMakale.Models.MakaleEtiketModel", b =>
                {
                    b.Property<int>("id_Makale")
                        .HasColumnType("int");

                    b.Property<int>("id_Etiket")
                        .HasColumnType("int");

                    b.HasKey("id_Makale", "id_Etiket");

                    b.HasIndex("id_Etiket");

                    b.ToTable("MakaleEtiket");
                });

            modelBuilder.Entity("blogMakale.Models.MakaleFotoModel", b =>
                {
                    b.Property<int>("id_MakaleFoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("id_Makale")
                        .HasColumnType("int");

                    b.HasKey("id_MakaleFoto");

                    b.HasIndex("id_Makale");

                    b.ToTable("MakaleFoto");
                });

            modelBuilder.Entity("blogMakale.Models.MakaleKategoriModel", b =>
                {
                    b.Property<int>("id_Makale")
                        .HasColumnType("int");

                    b.Property<int>("id_Kategori")
                        .HasColumnType("int");

                    b.HasKey("id_Makale", "id_Kategori");

                    b.HasIndex("id_Kategori");

                    b.ToTable("MakaleKategori");
                });

            modelBuilder.Entity("blogMakale.Models.MakaleModel", b =>
                {
                    b.Property<int>("id_Makale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MakaleBaslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MakaleIcerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("MakaleTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_Kullanici")
                        .HasColumnType("int");

                    b.HasKey("id_Makale");

                    b.HasIndex("id_Kullanici");

                    b.ToTable("Makale");
                });

            modelBuilder.Entity("blogMakale.Models.MakaleYorumModel", b =>
                {
                    b.Property<int>("id_MakaleYorum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("YorumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("YorumText")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("id_Kullanici")
                        .HasColumnType("int");

                    b.Property<int>("id_Makale")
                        .HasColumnType("int");

                    b.HasKey("id_MakaleYorum");

                    b.HasIndex("id_Kullanici");

                    b.HasIndex("id_Makale");

                    b.ToTable("MakaleYorum");
                });

            modelBuilder.Entity("blogMakale.Models.FavoriModel", b =>
                {
                    b.HasOne("blogMakale.Models.KullaniciModel", "Kullanici")
                        .WithMany("Favori")
                        .HasForeignKey("id_Kullanici")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("blogMakale.Models.MakaleModel", "Makale")
                        .WithMany("Favori")
                        .HasForeignKey("id_Makale")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("blogMakale.Models.MakaleEtiketModel", b =>
                {
                    b.HasOne("blogMakale.Models.EtiketModel", "Etiket")
                        .WithMany("MakaleEtiket")
                        .HasForeignKey("id_Etiket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("blogMakale.Models.MakaleModel", "Makale")
                        .WithMany("MakaleEtiket")
                        .HasForeignKey("id_Makale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("blogMakale.Models.MakaleFotoModel", b =>
                {
                    b.HasOne("blogMakale.Models.MakaleModel", "Makale")
                        .WithMany("MakaleFoto")
                        .HasForeignKey("id_Makale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("blogMakale.Models.MakaleKategoriModel", b =>
                {
                    b.HasOne("blogMakale.Models.KategoriModel", "Kategori")
                        .WithMany("MakaleKategori")
                        .HasForeignKey("id_Kategori")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("blogMakale.Models.MakaleModel", "Makale")
                        .WithMany("MakaleKategori")
                        .HasForeignKey("id_Makale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("blogMakale.Models.MakaleModel", b =>
                {
                    b.HasOne("blogMakale.Models.KullaniciModel", "Kullanici")
                        .WithMany("Makale")
                        .HasForeignKey("id_Kullanici")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("blogMakale.Models.MakaleYorumModel", b =>
                {
                    b.HasOne("blogMakale.Models.KullaniciModel", "Kullanici")
                        .WithMany("MakaleYorum")
                        .HasForeignKey("id_Kullanici")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("blogMakale.Models.MakaleModel", "Makale")
                        .WithMany("MakaleYorum")
                        .HasForeignKey("id_Makale")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
